// Class CopyButtonPlugin is a constructor function for creating a custom plugin
class CopyButtonPlugin {
  // constructor is a special method for creating and initializing an object created with a class
  constructor(options = {}) {
    // options is an object that contains any custom settings for the plugin
    // 'options' is destructured into 'self.hook' and 'self.callback'
    self.hook = options.hook;
    self.callback = options.callback;
  }
  
  // 'after:highlightElement' is an event that triggers after an element has been highlighted
  // This method adds a copy button next to the highlighted element
  "_after:highlightElement"({ el, text }) {
    // Create a new button element
    let button = Object.assign(document.createElement("button"), {
      // Set the innerHTML property of the button to "Copy"
      innerHTML: "Copy",
      // Set the class name of the button to "hljs-copy-button"
      className: "hljs-copy-button"
    });

    // Set the dataset.copied property of the button to false
    button.dataset.copied = false;

    // Add the "hljs-copy-wrapper" class to the parent element of the highlighted element
    el.parentElement.classList.add("hljs-copy-wrapper");

    // Append the copy button to the parent element of the highlighted element
    el.parentElement.appendChild(button);

    // Set the background color of the parent element of the highlighted element
    el.parentElement.style.setProperty("--hljs-theme-background", window.getComputedStyle(el).backgroundColor);

    // Add an event listener to the copy button
    button.onclick = function() {
      // Check if the navigator.clipboard object is supported by the user's browser
      if (!navigator.clipboard) return;

      // Create a new variable 'newText' that stores the text to be copied
      let newText = text;

      // If the 'hook' property is a function, pass the 'text' and 'el' as arguments and store the returned value in
